//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace BicycleStation.StationDBService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="StationToDB_ServiceBinding", Namespace="urn:StationToDB_Service")]
    public partial class StationToDB_Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback BicycleWithBookingUnlockedOperationCompleted;
        
        private System.Threading.SendOrPostCallback BicycleTakenOperationCompleted;
        
        private System.Threading.SendOrPostCallback BicycleReturnedToDockAtStationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBookingWithIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllBookingsForStationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SyncDockStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public StationToDB_Service() {
            this.Url = global::BicycleStation.Properties.Settings.Default.BicycleStation_StationDBService_StationToDB_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event BicycleWithBookingUnlockedCompletedEventHandler BicycleWithBookingUnlockedCompleted;
        
        /// <remarks/>
        public event BicycleTakenCompletedEventHandler BicycleTakenCompleted;
        
        /// <remarks/>
        public event BicycleReturnedToDockAtStationCompletedEventHandler BicycleReturnedToDockAtStationCompleted;
        
        /// <remarks/>
        public event getBookingWithIdCompletedEventHandler getBookingWithIdCompleted;
        
        /// <remarks/>
        public event GetAllBookingsForStationCompletedEventHandler GetAllBookingsForStationCompleted;
        
        /// <remarks/>
        public event SyncDockStatusCompletedEventHandler SyncDockStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:StationToDB_Service#soapaction", RequestNamespace="urn:StationToDB_Service", ResponseNamespace="urn:StationToDB_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool BicycleWithBookingUnlocked(int station_id, int booking_id, int bicycle_id) {
            object[] results = this.Invoke("BicycleWithBookingUnlocked", new object[] {
                        station_id,
                        booking_id,
                        bicycle_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BicycleWithBookingUnlockedAsync(int station_id, int booking_id, int bicycle_id) {
            this.BicycleWithBookingUnlockedAsync(station_id, booking_id, bicycle_id, null);
        }
        
        /// <remarks/>
        public void BicycleWithBookingUnlockedAsync(int station_id, int booking_id, int bicycle_id, object userState) {
            if ((this.BicycleWithBookingUnlockedOperationCompleted == null)) {
                this.BicycleWithBookingUnlockedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBicycleWithBookingUnlockedOperationCompleted);
            }
            this.InvokeAsync("BicycleWithBookingUnlocked", new object[] {
                        station_id,
                        booking_id,
                        bicycle_id}, this.BicycleWithBookingUnlockedOperationCompleted, userState);
        }
        
        private void OnBicycleWithBookingUnlockedOperationCompleted(object arg) {
            if ((this.BicycleWithBookingUnlockedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BicycleWithBookingUnlockedCompleted(this, new BicycleWithBookingUnlockedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:StationToDB_Service#soapaction", RequestNamespace="urn:StationToDB_Service", ResponseNamespace="urn:StationToDB_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool BicycleTaken(int station_id, int bicycle_id, int booking_id) {
            object[] results = this.Invoke("BicycleTaken", new object[] {
                        station_id,
                        bicycle_id,
                        booking_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BicycleTakenAsync(int station_id, int bicycle_id, int booking_id) {
            this.BicycleTakenAsync(station_id, bicycle_id, booking_id, null);
        }
        
        /// <remarks/>
        public void BicycleTakenAsync(int station_id, int bicycle_id, int booking_id, object userState) {
            if ((this.BicycleTakenOperationCompleted == null)) {
                this.BicycleTakenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBicycleTakenOperationCompleted);
            }
            this.InvokeAsync("BicycleTaken", new object[] {
                        station_id,
                        bicycle_id,
                        booking_id}, this.BicycleTakenOperationCompleted, userState);
        }
        
        private void OnBicycleTakenOperationCompleted(object arg) {
            if ((this.BicycleTakenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BicycleTakenCompleted(this, new BicycleTakenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:StationToDB_Service#soapaction", RequestNamespace="urn:StationToDB_Service", ResponseNamespace="urn:StationToDB_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool BicycleReturnedToDockAtStation(int bicycle_id, int station_id) {
            object[] results = this.Invoke("BicycleReturnedToDockAtStation", new object[] {
                        bicycle_id,
                        station_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BicycleReturnedToDockAtStationAsync(int bicycle_id, int station_id) {
            this.BicycleReturnedToDockAtStationAsync(bicycle_id, station_id, null);
        }
        
        /// <remarks/>
        public void BicycleReturnedToDockAtStationAsync(int bicycle_id, int station_id, object userState) {
            if ((this.BicycleReturnedToDockAtStationOperationCompleted == null)) {
                this.BicycleReturnedToDockAtStationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBicycleReturnedToDockAtStationOperationCompleted);
            }
            this.InvokeAsync("BicycleReturnedToDockAtStation", new object[] {
                        bicycle_id,
                        station_id}, this.BicycleReturnedToDockAtStationOperationCompleted, userState);
        }
        
        private void OnBicycleReturnedToDockAtStationOperationCompleted(object arg) {
            if ((this.BicycleReturnedToDockAtStationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BicycleReturnedToDockAtStationCompleted(this, new BicycleReturnedToDockAtStationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:StationToDB_Service#soapaction", RequestNamespace="urn:StationToDB_Service", ResponseNamespace="urn:StationToDB_Service")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public BookingObject getBookingWithId(int booking_id) {
            object[] results = this.Invoke("getBookingWithId", new object[] {
                        booking_id});
            return ((BookingObject)(results[0]));
        }
        
        /// <remarks/>
        public void getBookingWithIdAsync(int booking_id) {
            this.getBookingWithIdAsync(booking_id, null);
        }
        
        /// <remarks/>
        public void getBookingWithIdAsync(int booking_id, object userState) {
            if ((this.getBookingWithIdOperationCompleted == null)) {
                this.getBookingWithIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBookingWithIdOperationCompleted);
            }
            this.InvokeAsync("getBookingWithId", new object[] {
                        booking_id}, this.getBookingWithIdOperationCompleted, userState);
        }
        
        private void OngetBookingWithIdOperationCompleted(object arg) {
            if ((this.getBookingWithIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBookingWithIdCompleted(this, new getBookingWithIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:StationToDB_Service#soapaction", RequestNamespace="urn:StationToDB_Service", ResponseNamespace="urn:StationToDB_Service")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string[] GetAllBookingsForStation(int station_id) {
            object[] results = this.Invoke("GetAllBookingsForStation", new object[] {
                        station_id});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllBookingsForStationAsync(int station_id) {
            this.GetAllBookingsForStationAsync(station_id, null);
        }
        
        /// <remarks/>
        public void GetAllBookingsForStationAsync(int station_id, object userState) {
            if ((this.GetAllBookingsForStationOperationCompleted == null)) {
                this.GetAllBookingsForStationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllBookingsForStationOperationCompleted);
            }
            this.InvokeAsync("GetAllBookingsForStation", new object[] {
                        station_id}, this.GetAllBookingsForStationOperationCompleted, userState);
        }
        
        private void OnGetAllBookingsForStationOperationCompleted(object arg) {
            if ((this.GetAllBookingsForStationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllBookingsForStationCompleted(this, new GetAllBookingsForStationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:StationToDB_Service#soapaction", RequestNamespace="urn:StationToDB_Service", ResponseNamespace="urn:StationToDB_Service", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool SyncDockStatus(string bicycleIds, int numFree, int station_id) {
            object[] results = this.Invoke("SyncDockStatus", new object[] {
                        bicycleIds,
                        numFree,
                        station_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SyncDockStatusAsync(string bicycleIds, int numFree, int station_id) {
            this.SyncDockStatusAsync(bicycleIds, numFree, station_id, null);
        }
        
        /// <remarks/>
        public void SyncDockStatusAsync(string bicycleIds, int numFree, int station_id, object userState) {
            if ((this.SyncDockStatusOperationCompleted == null)) {
                this.SyncDockStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSyncDockStatusOperationCompleted);
            }
            this.InvokeAsync("SyncDockStatus", new object[] {
                        bicycleIds,
                        numFree,
                        station_id}, this.SyncDockStatusOperationCompleted, userState);
        }
        
        private void OnSyncDockStatusOperationCompleted(object arg) {
            if ((this.SyncDockStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SyncDockStatusCompleted(this, new SyncDockStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:StationToDB_Service")]
    public partial class BookingObject {
        
        private int booking_idField;
        
        private int start_timeField;
        
        private int start_stationField;
        
        private string passwordField;
        
        private string for_userField;
        
        /// <remarks/>
        public int booking_id {
            get {
                return this.booking_idField;
            }
            set {
                this.booking_idField = value;
            }
        }
        
        /// <remarks/>
        public int start_time {
            get {
                return this.start_timeField;
            }
            set {
                this.start_timeField = value;
            }
        }
        
        /// <remarks/>
        public int start_station {
            get {
                return this.start_stationField;
            }
            set {
                this.start_stationField = value;
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string for_user {
            get {
                return this.for_userField;
            }
            set {
                this.for_userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void BicycleWithBookingUnlockedCompletedEventHandler(object sender, BicycleWithBookingUnlockedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BicycleWithBookingUnlockedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BicycleWithBookingUnlockedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void BicycleTakenCompletedEventHandler(object sender, BicycleTakenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BicycleTakenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BicycleTakenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void BicycleReturnedToDockAtStationCompletedEventHandler(object sender, BicycleReturnedToDockAtStationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BicycleReturnedToDockAtStationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BicycleReturnedToDockAtStationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getBookingWithIdCompletedEventHandler(object sender, getBookingWithIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBookingWithIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBookingWithIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BookingObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BookingObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllBookingsForStationCompletedEventHandler(object sender, GetAllBookingsForStationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllBookingsForStationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllBookingsForStationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SyncDockStatusCompletedEventHandler(object sender, SyncDockStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SyncDockStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SyncDockStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591